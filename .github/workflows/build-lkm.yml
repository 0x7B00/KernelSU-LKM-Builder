name: Build LKM for Custom Kernel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-lkm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up swap space
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          echo "/swapfile none swap sw 0 0" | sudo tee -a /etc/fstab
          sudo sysctl vm.swappiness=10
          sudo sysctl vm.vfs_cache_pressure=50

      - name: Download and extract toolchain
        run: |
          mkdir -p toolchain
          curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android11-release/clang-r383902b.tar.gz | tar xz -C toolchain --strip-components=1
          export PATH=$PWD/toolchain/bin:$PATH

      - name: Set up kernel environment
        run: |
          git clone https://github.com/Yuyuko1024/kernel_xiaomi_chopin.git
          cd kernel_xiaomi_chopin
          git checkout chopin-r-oss
          export ARCH=arm64
          export SUBARCH=arm64
          # Use the downloaded toolchain
          export CROSS_COMPILE=aarch64-linux-gnu-
          # Use chopin_user_defconfig
          cp arch/arm64/configs/chopin_user_defconfig .config
          # Add any other setup commands needed to prepare the environment for building the kernel

      - name: Build LKM
        run: |
          cd kernel_xiaomi_chopin
          make ARCH=arm64 SUBARCH=arm64 olddefconfig modules || true

      - name: Upload kernel modules
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: kernel_modules
          path: kernel_xiaomi_chopin/*.ko

      - name: Clean up workspace
        if: always()
        run: |
          cd ..
          rm -rf kernel_xiaomi_chopin
          rm -rf toolchain

      # Add any additional steps as needed, such as testing or deploying the LKM
